<head>
  <title><%= @viewer.title %> | CrowFly</title>
  <%= stylesheet_link_tag 'application' %>
  <script src="http://www.google.com/jsapi?key=ABQIAAAAz0RvMDFXhv-O6CYM6HQcshR7WLFas0bHKKetph4qLhGMtmIRJhQbleK3yk9FCoxwYNk7EFRYK69ZnA"></script>            
  <%= javascript_include_tag 'jquery', 'jquery-ui', 'ge', 'inputs', 'application' %>
  <%= csrf_meta_tag %>
  <script type="text/javascript">
    function initCB(instance) {
      ge = instance;
      ge.getWindow().setVisibility(true);
      
      <%= render '/application/logo' %>

    <% unless @viewer.logo_file_name.nil? %>
      var logo = ge.createIcon('');
      logo.setHref('http://crowfly.co<%= @viewer.logo.url %>');
      var screenOverlay = ge.createScreenOverlay('');
      screenOverlay.setIcon(logo);
      screenOverlay.getOverlayXY().setXUnits(ge.UNITS_PIXELS);
      screenOverlay.getOverlayXY().setYUnits(ge.UNITS_INSET_PIXELS);
      screenOverlay.getOverlayXY().setX(<%= @viewer.logo_width %>/2);
      screenOverlay.getOverlayXY().setY(<%= @viewer.logo_height %>/2);
      screenOverlay.getSize().setXUnits(ge.UNITS_PIXELS);
      screenOverlay.getSize().setYUnits(ge.UNITS_PIXELS);
      screenOverlay.getSize().setX(<%= @viewer.logo_width %>);
      screenOverlay.getSize().setY(<%= @viewer.logo_height %>);
      ge.getFeatures().appendChild(screenOverlay);
    <% end %>
      
      var cam = ge.getView().copyAsCamera(ge.ALTITUDE_ABSOLUTE);
      ge.getOptions().setAtmosphereVisibility(true);
      ge.getOptions().setScaleLegendVisibility(true);
      ge.getOptions().setFlyToSpeed(1.0);
      ge.getNavigationControl().setVisibility(ge.VISIBILITY_SHOW);
      ge.getLayerRoot().enableLayerById(ge.LAYER_BORDERS, true);
      ge.getLayerRoot().enableLayerById(ge.LAYER_BUILDINGS, true);
      ge.getLayerRoot().enableLayerById(ge.LAYER_ROADS, true);
      ge.getLayerRoot().enableLayerById(ge.LAYER_TERRAIN, <%= @viewer.terrain_default %>);
      cam.setAltitude(<%= @beginning.altitude %>);
      cam.setLatitude(<%= @point.latitude %>);
      cam.setLongitude(<%= @point.longitude %>);
      cam.setHeading(0);
      cam.setTilt(0);
      ge.getView().setAbstractView(cam);
      
      google.earth.addEventListener(ge.getView(), 'viewchangeend', function() {
        if (document.getElementById('inputs').style.display==="block") {
        } else {
          $("#loading").fadeOut(500, function() {
            $("#inputs").slideDown(500);
          });
        }
      });
      
      google.earth.addEventListener(ge.getView(), 'viewchange', function() {
        var cam = ge.getView().copyAsCamera(ge.ALTITUDE_ABSOLUTE);
        var Latitude = cam.getLatitude();
        var Longitude = cam.getLongitude();
        document.getElementById('point_latitude').style.backgroundImage="none";
        document.getElementById('point_longitude').style.backgroundImage="none";
      });
      
      showPoint_<%= @point.id %>();
    }
    
    function showPoint_<%= @point.id %>() {
      var placemark = ge.createPlacemark('');
      placemark.setName(document.getElementById('point_name').value);
      ge.getFeatures().appendChild(placemark);
      
      var icon = ge.createIcon('');
      icon.setHref('http://crowfly.co/images/square.png');
      var style = ge.createStyle('');
      style.getIconStyle().setIcon(icon);
      placemark.setStyleSelector(style);
      
      var point = ge.createPoint('');
      point.setLatitude(<%= @point.latitude %>);
      point.setLongitude(<%= @point.longitude %>);
      placemark.setGeometry(point);      
      
      google.earth.addEventListener(placemark, 'click', function(event) {          
        event.preventDefault();
        var balloon = ge.createHtmlDivBalloon('');
        balloon.setFeature(placemark);
        var div = document.createElement('DIV');
        div.innerHTML = document.getElementById('balloon-content').innerHTML;
        balloon.setContentDiv(div);
        ge.setBalloon(balloon);
      });
      
      google.earth.addEventListener(ge.getWindow(), 'mousedown', function(event) {
        if (event.getTarget().getType() == 'KmlPlacemark' &&
        event.getTarget().getGeometry().getType() == 'KmlPoint') {
          var placemark = event.getTarget();
          dragInfo = {
            placemark: event.getTarget(),
            dragged: false
          };
        }
      });
      google.earth.addEventListener(ge.getGlobe(), 'mousemove', function(event) {
        if (dragInfo) {
          event.preventDefault();
          var point = dragInfo.placemark.getGeometry();
          point.setLatitude(event.getLatitude());
          point.setLongitude(event.getLongitude());
          document.getElementById('point_latitude').value=point.getLatitude().toFixed(6);
          document.getElementById('point_longitude').value=point.getLongitude().toFixed(6);
          dragInfo.dragged = true;
        }
      });
      google.earth.addEventListener(ge.getWindow(), 'mouseup', function(event) {
        if (dragInfo) {
          if (dragInfo.dragged) {
            event.preventDefault();
          }
          dragInfo = null;
        }
      });
    }
    
    function addPoint() {
      hideNotice();
      displayNotice();
      $(".message").html("<p>Please drag the existing point. You can add other points after you save this one.</p>");
    }
    
    function setPoint() {
      addPoint();
    }
    
    <%= render '/application/search' %>
    
  	function flyTo(to) {
      var view = ge.createCamera('');
    	switch(to) {
        case "<%= @beginning.name %>":
          view.set(<%= @beginning.latitude %>, <%= @beginning.longitude %>, <%= @beginning.altitude %>, ge.ALTITUDE_ABSOLUTE, <%= @beginning.heading %>, <%= @beginning.tilt %>, 0);
        break;
      <% @destinations.each do |d| %>
        case "<%= d.name %>":
          view.set(<%= d.latitude %>, <%= d.longitude %>, <%= d.altitude %>, ge.ALTITUDE_ABSOLUTE, <%= d.heading %>, <%= d.tilt %>, 0);
        break;
      <% end %>      
      }
      ge.getView().setAbstractView(view);
    }
    $(document).ready(function(){
      $("#point_formatted").val('<%= @point.formatted %>');
    });
  </script>
  <%= csrf_meta_tag %>
</head>
<body>
  <div id="wrapper">
    <div id="toolbar">
      <%= render '/application/toolbar' %>
      <div id="showbar">
        <h2>Viewer: <span class="white"><%= link_to @viewer.title, [@user, @viewer] %></span></h2>
      </div>
      <div id="notice">
        <div class="message">
          <% if @point.errors.any? || flash[:notice] || flash[:alert] %>
            <script>displayNotice()</script>
            <% @point.errors.full_messages.each do |msg| %>
              <p><%= msg %>.</p>
            <% end %>
            <p><%= flash[:notice] %> <%= flash[:alert] %></p>
          <% end %>
        </div>
        <div class="close">
          <%= link_to 'x', '#', :onclick => 'hideNotice()' %>
        </div>
      </div>
    </div>
    <div id="content">
      <div id="left-panel">
        <div id="navigation">
          <span class="active"><%= link_to image_tag("viewers.png"), user_viewers_path %></span>
          <span class="dormant"><%= link_to image_tag("overlays.png"), user_overlays_path %></span>
          <span class="dormant"><%= link_to image_tag("geofiles.png"), user_geofiles_path %></span>          
          <%= image_tag("arrow.png") %>
          <span class="dormant"><%= link_to image_tag("beginning.png"), edit_user_viewer_beginning_path(@user, @viewer, @beginning) %></span>
          <span class="dormant"><%= link_to image_tag("destinations.png"), user_viewer_destinations_path(@user, @viewer) %></span>
          <span class="active"><%= link_to image_tag("points.png"), user_viewer_points_path(@user, @viewer) %></span>
        </div>
        <div id="panel-content">
          <%= form_for [@user, @viewer, @point], :html => { :multipart => true } do |f| %>
            <div class="step">
              <div class="step-count">
                <%= image_tag('one.png') %>
              </div>
              <div class="step-field">
                <p>NAME</p>
                <%= f.text_field :name, :size => "35" %>
              </div>
            </div>
            <div class="step">
              <div class="step-count">
                <%= image_tag('two.png') %>
              </div>
              <div class="step-field">              
                <p>CONTENT</p>
                <%= f.select(:formatted, '<option value="false">Keep it simple</option><option value="true">Let me add html & css</option>') %><br />
                <%= f.text_area :content, :style => "text-align:left;" %>
                <div class="file-input">
                  <p>ADD AN IMAGE</p>
                  <%= f.file_field :image %>
                </div>
              </div>
            </div>          
            <div class="step">
              <div class="step-count">
                <%= image_tag('three.png') %>
              </div>
              <div class="step-field">
                <p>FIND LOCATION</p>
                <input id="search" type="text" onkeypress="return preventEnter(this, event)"/><input id="find-location" type="button" value="Fly To" onClick="buttonClick()"><br />
                <p>OR USE AN EXISTING DESTINATION</p>                
                <select onChange="flyTo(this.value);" style="max-width:200px; font-size: 12px; color:#003300" name="propertylocator">
                  <option value="<%= @beginning.name %>"><%= @beginning.name %></option>
                  <% @destinations.each do |d| %>
                  <option value="<%= d.name %>"><%= d.name %></option>
                  <% end %>
                </select>
              </div>
            </div>
            <div class="step">
              <div class="step-count">
                <%= image_tag('four.png') %>
              </div>
              <div class="step-field">
                <p>ADD YOUR POINT</p>
                <input id="set-point" type="button" value="Generate" onClick="setPoint()">
              </div>
            </div>
            <div class="step">
              <div class="step-count">
                <%= image_tag('five.png') %>
              </div>
              <div class="step-field">
                <div id="loading">
                  <%= image_tag('black-loading.gif') %>
                </div>
                <div id="inputs">
                  <div class="input">
                    <p>LATITUDE</p><%= f.text_field :latitude, :class => 'cam-input', :onFocus => 'removeImage(this)', :onBlur => 'checkValue(this)' %>
                  </div>
                  <div class="input">
                    <p>LONGITUDE</p><%= f.text_field :longitude, :class => 'cam-input', :onFocus => 'removeImage(this)', :onBlur => 'checkValue(this)' %>
                  </div>
                  <div class="save">
                    <%= image_tag('clear.png', {:onClick => 'submitForm()'}) %>
                  </div>
                </div>
              </div>            
            </div>
          <% end %>
        </div>
        <div id="tip">
          <div class="tip">
            <u>Tip</u><br />If you know html or css, you can code fancy content for your point.
          </div>
        </div>
      </div>
      <div id="right-panel">
        <div id="plugin">
        </div>
      </div>
      <div id="balloon-content" style="display:none;">
        <div class="point-content">
          <% if @point.formatted == true %>
            <%= @point.content.html_safe %><br />
            (save your point to see changes)
          <% else %>
            <div class="unformatted">
              <b><%= @point.name %></b>
              <br /><br />
              <%= simple_format(@point.content) %><br />
              (save your point to see changes)
            </div>
          <% end %>
        </div>
      </div>
    </div>
    <%= render '/application/footer'%>    
  </div>
</body>